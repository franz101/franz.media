---
layout: advent-item
title: 1st advent - RANSac Regression
date: 2018-11-30
advent: 1
description: Youâ€™ll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. # Add post description (optional)
img: ransac_example.png # Add image post (optional)
tags: [Blog, Advent, Data]
author: # Add name author (optional)
---

Doing some linear regression this summer for a logistic company,
I got interested in finding ways to automatically assign the linear regression to the data,
even if it's noisy.

{% highlight python %}
from sklearn.linear_model import RANSACRegressor
from sklearn.datasets import make_regression
X, y = make_regression(
       n_samples=200, n_features=2, noise=4.0, random_state=0)
reg = RANSACRegressor(random_state=0).fit(X, y)
print("Regression score is: {}".format(reg.score(X, y))
print(reg.predict(X[:1,]))
{% endhighlight %}

Check out the [sklearn docs][scikit-docs] for more info on how the RANSACRegressor is implemented. If you  feel in a crazy mood, definately check out the this explanatory song:
<iframe width="560" height="315" src="https://www.youtube.com/embed/1YNjMxxXO-E" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>


Image source: [CSE Buffalo][image-source]
If you enjoyed this post I'm looking forward to the next advent hoho.


[scikit-docs]: https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.RANSACRegressor.html
[image-source]:   https://cse.buffalo.edu/~jryde/lectures/cse410/MobileRobotMapping_2.html
[ransac-talk]: https://www.youtube.com/watch?v=1YNjMxxXO-E
